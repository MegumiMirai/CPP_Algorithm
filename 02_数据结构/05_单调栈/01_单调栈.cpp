// 给定一个长度为 N 的整数数列，输出每个数左边第一个比它小的数，如果不存在则输出 −1。

// 输入格式
// 第一行包含整数 N，表示数列长度。

// 第二行包含 N 个整数，表示整数数列。

// 输出格式
// 共一行，包含 N 个整数，其中第 i 个数表示第 i 个数的左边第一个比它小的数，如果不存在则输出 −1。

// 数据范围
// 1≤N≤105
// 1≤数列中元素≤109
// 输入样例：
// 5
// 3 4 2 7 5
// 输出样例：
// -1 3 -1 2 2

#include<iostream>
using namespace std;

const int N = 100010;
int stk[N], tt = 0; // 栈底设置为0

int main(){
  int n;
  cin >> n; // n个操作数
  while(n--){
    int x;
    cin >> x; 
    while(tt && stk[tt] >= x) tt--; // 如果此时栈不为空并且栈顶元素大于等于x，就让栈顶往下走
    if(tt) cout << stk[tt] << " "; // 如果此时栈顶不为空，说明栈中有元素比x小，所以输出
    else cout << "-1 "; // 表示栈中的数都比x大，所以不存在，输出 -1

    stk[++tt] = x; // 把这个数放进栈顶
  }
  return 0;
}