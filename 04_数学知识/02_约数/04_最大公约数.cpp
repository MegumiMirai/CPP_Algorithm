// 给定 n 对正整数 ai,bi，请你求出每对数的最大公约数。

// 输入格式
// 第一行包含整数 n。

// 接下来 n 行，每行包含一个整数对 ai,bi。

// 输出格式
// 输出共 n 行，每行输出一个整数对的最大公约数。

// 数据范围
// 1≤n≤105,
// 1≤ai,bi≤2×109
// 输入样例：
// 2
// 3 6
// 4 6
// 输出样例：
// 3
// 2


// 欧几里得算法，也叫作辗转相除法
// 除和除以的区别
// 比如说 8 除 4，那么4是被除数，8是除数，结果是 0.5
//       8 除以 4，那么8是被除数，4是除数，结果是 2
// 算法的思想：如果 d 除 a 能整除，d 除 b 能整除，那么 d 除 （ax+by) 也能整除; 比如说：2 除 4 = 2，2 除 8 等于 4，都能整除，那么 2 除 （4+8） = 6 也能整除
// 那么 （a,b)的最大公约数 等于 (b, a mod b) 的最大公约数
// 推理：
//      a mod b = a - (a / b) * b = a - c * 
//      那么假设 d 除 b 和 d 除 (a - c * b) 都能整除，那么 d 除 (a - c * b + c * b) 也能整除
//      所以 (a, b) 的最大公约数等于 (b, a mod b) 的最大公约数
#include<iostream>
using namespace std;

int gcd(int a, int b){
    return b ? gcd(b, a % b) : a;
}

int main(){
    int n;
    cin >> n;
    while(n--){
        int a, b;
        cin >> a >> b;
        cout << gcd(a, b) << endl;
    }
    
    return 0;
}